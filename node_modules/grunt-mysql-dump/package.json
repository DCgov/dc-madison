{
  "name": "grunt-mysql-dump",
  "description": "Dump MYSQL databases using Grunt",
  "version": "1.0.0",
  "homepage": "https://github.com/DigitalCuisine/grunt-mysql-dump",
  "author": {
    "name": "Digital Cuisine",
    "email": "chef@digitalcuisine.fr",
    "url": "http://www.digitalcuisine.fr"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:digitalcuisine/grunt-mysql-dump.git"
  },
  "bugs": {
    "url": "https://github.com/digitalcuisine/grunt-mysql-dump/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/digitalcuisine/grunt-mysql-dump/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "shelljs": "~0.1.4"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "deployments",
    "deploy",
    "database",
    "mysql"
  ],
  "readme": "# Grunt (MYSQL) Database Dumps\n\n> Dump local or remote MYSQL databases using Grunt.\n\n**IMPORTANT NOTE**: the authors of this Plugin assume **no responsibility** for any actions which result from the usage of this script. Specifically, the integrity of the generated dumps cannot be guaranteed.\nUse this plugin *at your own risk*. It is *strongly* recommended that you test the script in a non-critical environment prior to rolling out for production use. Make sure it generates dumps that match your requirements before relying on it as a backup solution.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-mysql-dump --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-mysql-dump');\n```\n\n## Documentation\n\n### Overview\nIn your project's Gruntfile, add a section named `db_dump` to the data object passed into `grunt.initConfig()`.\n\nThe task expects a series of `targets`, one for each of the locations which you want to dump the database from.\n\n```js\ngrunt.initConfig({\n  db_dump: {\n    local: {\n\n    },\n    my_target_1: {\n\n    },\n    my_target_2: {\n\n    },\n    // etc\n  }\n});\n```\n\n\n### Available Tasks\n\nThe plugin makes one new task available via Grunt: `db_dump`. The interface for this command is:\n\n```shell\ngrunt db_dump:target_name\n```\n\nThis will dump the database according to the options found in the `target_name` target.\nYou can dump databases for all targets by simply calling `grunt db_dump`.\n\n\n### Usage\n\nYou *must* define targets as shown above. Each target defines the connection information to the targeted database and the destination file name of the generated dump:\n\n```js\n\"local\": {\n  \"options\": {\n    \"title\": \"Local DB\",\n  \n    \"database\": \"db_name\",\n    \"user\": \"db_username\",\n    \"pass\": \"db_password\",\n    \"host\": \"db_host\",\n  \n    \"backup_to\": \"/db/backups/local.sql\"\n  }\n},\n```\n\nYou can also connect to a remote host using SSH by specifying a `ssh_host` option in your target:\n\n```js\n\"production\": {\n  \"options\": {\n    \"title\": \"Production DB\",\n  \n    \"database\": \"db_name\",\n    \"user\": \"db_username\",\n    \"pass\": \"db_password\",\n    \"host\": \"db_host\",\n    \n    \"ssh_host\": \"db_ssh_host\",\n    \n    \"backup_to\": \"/db/backups/production.sql\"\n  }\n}\n```\n\n\n\n#### Full Usage Example\n\nThe structure below represents a typical usage example for the task configuration. Obviously you should replace the placeholders with your own database/environment configurations.\n\n```js\ngrunt.initConfig({\n  // Load database config from external JSON (optional)\n  db_config: grunt.file.readJSON('config/db.json'),\n\n  db_dump: {\n    options: {\n      // common options should be defined here\n    },\n    \n    // \"Local\" target\n    \"local\": {\n      \"options\": {\n          \"title\": \"Local DB\",\n        \n        \"database\": \"<%= db_config.local.db_name %>\",\n        \"user\": \"<%= db_config.local.username %>\",\n        \"pass\": \"<%= db_config.local.password %>\",\n        \"host\": \"<%= db_config.local.host %>\",\n        \n        \"backup_to\": \"/db/backups/local.sql\"\n      }\n    },\n    \n    \"stage\": {\n      \"options\": {\n        \"title\": \"Production DB\",\n        \n        \"database\": \"<%= db_config.stage.db_name %>\",\n        \"user\": \"<%= db_config.stage.username %>\",\n        \"pass\": \"<%= db_config.stage.password %>\",\n        \"host\": \"<%= db_config.stage.host %>\",\n        \n        \"backup_to\": \"/db/backups/stage.sql\"\n      }\n    },\n    \n    \"production\": {\n      \"options\": {\n        \"title\": \"Production DB\",\n        \n        \"database\": \"<%= db_config.production.db_name %>\",\n        \"user\": \"<%= db_config.production.username %>\",\n        \"pass\": \"<%= db_config.production.password %>\",\n        \"host\": \"<%= db_config.production.host %>\",\n        \n        \"ssh_host\": \"<%= db_config.production.ssh_host %>\",\n        \n        \"backup_to\": \"/db/backups/production.sql\"\n      }\n    }\n  },\n})\n```\n\n### Configuration\n\nEach target expects a series of configuration options to be provided to enable the task to function correctly. These are detailed below:\n\n#### title\nType: `String`  \nDescription: A proper case name for the target. Used to describe the target to humans in console output whilst the task is running.\n\n#### database\nType: `String`  \nDescription: the name of the database for this target.\n\n#### user\nType: `String`  \nDescription: the database user with permissions to access the database\n\n#### pass\nType: `String`  \nDefault: *(empty password)*  \nDescription: the password for the database user (above)\n\n#### host\nType: `String`  \nDescription: the hostname for the location in which the database resides. Typically this will be `localhost`\n\n#### port\nType: `Integer`  \nDefault: `3306`  \nDescription: the port the mysql server listens to\n\n#### ssh_host\nType: `String`  \nDescription: ssh connection string in the format `SSH_USER@SSH_HOST`. The task assumes you have ssh keys setup which allow you to remote into your server without requiring the input of a password. As this is an exhaustive topic we will not cover it here but you might like to start by reading [Github's own advice](https://help.github.com/articles/generating-ssh-keys).\n\n#### backup_to\nType: `String`\nDefault: `\"db/backups/<%= grunt.template.today('yyyy-mm-dd') %> - <%= target %>.sql\"`\nDescription: full destination file path of the generated dump. This option can include templates such as `<%= grunt.template.today('yyyy-mm-dd') %>` or `<%= target %>`.\n\n### Options\n\n*No global option as of now*\n\n\n## Contributing\n\nContributions to this plugin are most welcome. This is very much a Alpha release and so if you find a problem please consider raising a pull request or creating a Issue which describes the problem you are having and proposes a solution.\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n\n* 2013-11-27   v1.0.0   Releasing. Yeah.\n* 2013-11-27   v0.0.1   Plugin made private until it reaches a publishable state. Update README and package info.\n\n### grunt-deployments history\n* 2013-11-12   v0.2.0   Fix escaping issues, ability to define `target` via options, README doc fixes, pass host param to mysqldump.\n* 2013-06-11   v0.1.0   Minor updates to docs including addtion of Release History section.\n* 2013-06-11   v0.0.1   Initial Plugin release.\n\n## License\n\nThis plugin is a stripped down and modified version of @getdave's plugin [grunt-deployments](https://github.com/getdave/grunt-deployments)\nUntil the codebase undercomes significant changes, this plugin's source code remains *Copyright (c) 2013 David Smith* under the MIT license as found in the LICENSE-MIT file.\n\nModifications on the codebase are *Copyright (c) 2013 Digital Cuisine* under the MIT license too.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-mysql-dump@1.0.0",
  "dist": {
    "shasum": "ce0cb770a7047cc4987b6c5672deedafcdbc3383"
  },
  "_from": "grunt-mysql-dump@",
  "_resolved": "https://registry.npmjs.org/grunt-mysql-dump/-/grunt-mysql-dump-1.0.0.tgz"
}

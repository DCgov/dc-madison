angular.module("madisonApp.constants",[]).constant("AUTH_EVENTS",{loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized"}).constant("USER_ROLES",{all:"*",admin:"admin",independent:"independent-sponsor",groupMember:"group-member",basic:"basic",guest:"guest"}).constant("PROVINCES",{US:{AL:"Alabama",AK:"Alaska",AZ:"Arizona",AR:"Arkansas",CA:"California",CO:"Colorado",CT:"Connecticut",DE:"Delaware",DC:"District of Columbia",FL:"Florida",GA:"Georgia",HI:"Hawaii",ID:"Idaho",IL:"Illinois",IN:"Indiana",IA:"Iowa",KS:"Kansas",KY:"Kentucky",LA:"Louisiana",ME:"Maine",MD:"Maryland",MA:"Massachusetts",MI:"Michigan",MN:"Minnesota",MS:"Mississippi",MO:"Missouri",MT:"Montana",NE:"Nebraska",NV:"Nevada",NH:"New Hampshire",NJ:"New Jersey",NM:"New Mexico",NY:"New York",NC:"North Carolina",ND:"North Dakota",OH:"Ohio",OK:"Oklahoma",OR:"Oregon",PA:"Pennsylvania",RI:"Rhode Island",SC:"South Carolina",SD:"South Dakota",TN:"Tennessee",TX:"Texas",UT:"Utah",VT:"Vermont",VA:"Virginia",WA:"Washington",WV:"West Virginia",WI:"Wisconsin",WY:"Wyoming",AS:"American Samoa",FM:"Federated States of Micronesia",GU:"Guam",MH:"Marshall Islands",MP:"Northern Mariana Islands",PW:"Palau",PR:"Puerto Rico",VI:"Virgin Islands"}}).constant("SITE",{name:"Madison"}),angular.module("madisonApp.controllers",[]),angular.module("madisonApp.controllers").controller("AnnotationController",["$scope","$sce","$http","annotationService","loginPopupService","growl","$location","$filter","$timeout",function($scope,$sce,$http,annotationService,loginPopupService,growl,$location,$filter,$timeout){function openPanelForAnnotationId(id){var group=findGroupFromAnnotationId(id);group&&($scope.showAnnotations(group),$(document).scrollTop($("#annotation_"+id).offset().top-50))}function scrollToAnnotationComment(commentId){var subCommentHash="annsubcomment_"+commentId;$timeout(function(){var top=$("#"+subCommentHash).offset().top,annotationListTop=$(".annotation-list").offset().top;$(".annotation-list").scrollTop(top-annotationListTop-20)},1500)}function parentAnnotationIdFromComment(commentId){var foundId;return angular.forEach($scope.annotations,function(annotation){var commentIds=annotation.comments.map(function(comment){return comment.id});-1!==commentIds.indexOf(commentId)&&(foundId=annotation.id)}),foundId}function findGroupFromAnnotationId(annotationId){var foundGroup;return angular.forEach($scope.annotationGroups,function(group){var idsInGroup=group.annotations.map(function(annotation){return annotation.id});-1!==idsInGroup.indexOf(annotationId)&&(foundGroup=group)}),foundGroup}function loadAnnotations(){loadTimeout&&clearTimeout(loadTimeout);var firstAnnotation;if(annotationService.annotationGroups){var groups=annotationService.annotationGroups;firstAnnotation=groups[Object.keys(groups)[0]]}if(firstAnnotation&&firstAnnotation.parent&&firstAnnotation.parent.offset()){angular.forEach(annotationService.annotations,function(annotation){if($.inArray(annotation,$scope.annotations)<0){var collapsed=!0;$scope.subCommentId&&angular.forEach(annotation.comments,function(subcomment){subcomment.id==$scope.subCommentId&&(collapsed=!1)}),annotation.permalinkBase="annotation",annotation.label="annotation",annotation.commentsCollapsed=collapsed,$scope.annotations.push(annotation)}});for(var index in annotationService.annotationGroups){var annotationGroup=annotationService.annotationGroups[index];if(0!==annotationGroup.parent.length){var parentTop=annotationGroup.parent.offset().top,containerTop=$(".annotation-container").offset().top;annotationGroup.top=parentTop-containerTop+"px",annotationGroup.users=[];for(var annotationIndex in annotationGroup.annotations){var annotation=annotationGroup.annotations[annotationIndex];annotationGroup.users.indexOf(annotation.user.id)<0&&annotationGroup.users.push(annotation.user.id);for(var commentIndex in annotation.comments){var comment=annotation.comments[commentIndex];annotation.comments[commentIndex].permalinkBase="annsubcomment",annotation.comments[commentIndex].label="comment",annotation.comments[commentIndex].doc_id=annotation.doc_id,annotationGroup.users.indexOf(comment.user.id)<0&&annotationGroup.users.push(comment.user.id)}}$scope.annotationGroups.push(annotationGroup)}}$scope.$apply()}else loadTimeout=setTimeout(loadAnnotations,500)}$scope.annotations=[],$scope.annotationGroups=[],$scope.supported=null,$scope.opposed=!1,$scope.annotationsShow=!1,$scope.currentGroup=null;var hash=$location.hash(),annotationId=hash.match(ANNOTATION_HASH_REGEX),subCommentId=hash.match(ANNOTATION_COMMENT_HASH_REGEX);(annotationId||subCommentId)&&(annotationId&&($scope.annotationId=parseInt(annotationId[1])),subCommentId&&($scope.subCommentId=parseInt(subCommentId[1])),$scope.$on("annotationsSet",function(){var parentAnnotationId=annotationId?parseInt(annotationId[1]):parentAnnotationIdFromComment(parseInt(subCommentId[1]));openPanelForAnnotationId(parentAnnotationId),$scope.subCommentId&&scrollToAnnotationComment($scope.subCommentId)}));var loadTimeout;$scope.$on("annotationsUpdated",function(){loadAnnotations()}),$scope.isSponsor=function(){var sponsored=($scope.user.id,!1);return sponsored},$scope.notifyAuthor=function(annotation){$http.post("/api/docs/"+doc.id+"/annotations/"+annotation.id+"/seen").success(function(data){annotation.seen=data.seen}).error(function(data){console.error("Unable to mark activity as seen: %o",data)})},$scope.activityOrder=function(activity){return activity.likes},$scope.addAction=function(activity,action,$event){$scope.user&&""!==$scope.user.id?$http.post("/api/docs/"+$scope.doc.id+"/"+activity.label+"s/"+activity.id+"/"+action).success(function(data){activity.likes=data.likes,activity.flags=data.flags}).error(function(data){console.error(data)}):loginPopupService.showLoginForm($event)},$scope.collapseComments=function(activity){activity.commentsCollapsed=!activity.commentsCollapsed},$scope.showCommentForm=function($event){$scope.user&&""!==$scope.user.id?$("#comment-form-field").focus():loginPopupService.showLoginForm($event)},$scope.subcommentSubmit=function(activity,subcomment){subcomment.user=$scope.user,$.post("/api/docs/"+$scope.doc.id+"/"+activity.label+"s/"+activity.id+"/comments",{comment:subcomment}).success(function(data){data.permalinkBase="annsubcomment",data.label="comment",activity.comments.push(data),subcomment.text="",subcomment.user="",$scope.$apply()}).error(function(data){console.error(data)})},$scope.showAnnotations=function(annotationGroup){$scope.annotationsShow=!0,$scope.currentGroup=annotationGroup},$scope.hideAnnotations=function(){$scope.annotationsShow=!1,$scope.currentGroup=null}}]),angular.module("madisonApp.controllers").controller("AppController",["$rootScope","$scope","AuthService","USER_ROLES","SessionService","loginPopupService","pageService","$location","$anchorScroll","prompts",function($rootScope,$scope,AuthService,USER_ROLES,SessionService,loginPopupService,pageService,$location,$anchorScroll,prompts){"use strict";$scope.user=null,$scope.userRoles=USER_ROLES,$scope.isAuthorized=AuthService.isAuthorized,$scope.loggingIn=loginPopupService.loggingIn,$scope.loggingInState=null,$scope.page=pageService,$scope.$on("loggingIn",function(){$scope.loggingIn=loginPopupService.loggingIn,$scope.loggingInState=loginPopupService.state}),$scope.$on("sessionChanged",function(){$scope.user=SessionService.getUser(),$scope.groups=SessionService.getGroups()}),$scope.$on("activeGroupChanged",function(){$scope.activeGroup=SessionService.getActiveGroup()}),AuthService.getUser(),AuthService.isAuthenticated()||prompts.info('Want to help craft legislation?  <a href="/user/signup">Create an account to annotate and comment &raquo;</a>'),$scope.setActiveGroup=function(groupId){AuthService.setActiveGroup(groupId)},$scope.removeActiveGroup=function(){AuthService.removeActiveGroup()},$scope.scrollTo=function(id){console.log("Scrolling to "+id),$location.hash(id),$anchorScroll()}}]),angular.module("madisonApp.controllers").controller("CommentController",["$scope","$sce","$http","annotationService","loginPopupService","growl","$location","$filter","$timeout","$anchorScroll",function($scope,$sce,$http,annotationService,loginPopupService,growl,$location,$filter,$timeout,$anchorScroll){$scope.supported=null,$scope.opposed=!1,$scope.showReplyForm={},$scope.showReplies={},$scope.loadingReplies={},$scope.commentId=null,$scope.subCommentId=null;var hash=$location.hash(),commentId=hash.match(COMMENT_HASH_REGEX);commentId&&($scope.commentId=parseInt(commentId[1]),commentId[2]&&($scope.subCommentId=parseInt(commentId[2]))),$scope.doc.$promise.then(function(){$scope.getDocComments()}),$scope.getDocComments=function(){var docId=$scope.doc.id;$http({method:"GET",url:"/api/docs/"+docId+"/comments"}).success(function(data){angular.forEach(data,function(comment){comment.commentsCollapsed=!0,comment.permalinkBase="comment",comment.label="comment",comment.link="comment_"+comment.id,comment.comments=[],$scope.doc.comments.push(comment),$scope.subCommentId&&comment.id===$scope.commentId&&$scope.toggleReplies(comment)});var offInitialSubCommentsLoaded=$scope.$on("commentRepliesShown",function(){$timeout($anchorScroll,0),offInitialSubCommentsLoaded()});$timeout($anchorScroll,0)}).error(function(data){console.error("Error loading comments: %o",data)})},$scope.isSponsor=function(){var currentId=$scope.user.id,sponsored=!1;return angular.forEach($scope.doc.sponsor,function(sponsor){currentId===sponsor.id&&(sponsored=!0)}),sponsored},$scope.parentSearch=function(arr,val){var i;for(i=0;i<arr.length;i++)if(arr[i].id===val)return i;return!1},$scope.commentSubmit=function(comment){comment.user=$scope.user,comment.doc=$scope.doc,$http.post("/api/docs/"+comment.doc.id+"/comments",{comment:comment}).success(function(data){data.permalinkBase="comment",data.label="comment",$scope.doc.comments.push(data),comment.text=""}).error(function(data){console.error("Error posting comment: %o",data)})},$scope.activityOrder=function(activity){return activity.likes},$scope.collapseComments=function(activity){activity.commentsCollapsed=!activity.commentsCollapsed},$scope.subcommentSubmit=function(activity,subcomment){subcomment.user=$scope.user,$.post("/api/docs/"+$scope.doc.id+"/"+activity.label+"s/"+activity.id+"/comments",{comment:subcomment}).success(function(data){data.comments=[],data.permalinkBase="comment",data.label="comment",activity.comments.push(data),subcomment.text="",subcomment.user=""}).error(function(data){console.error(data)})},$scope.toggleReplies=function(comment,$event){return comment.replyCount>0&&0===comment.comments.length?($scope.loadingReplies[comment.id]=!0,$http({method:"GET",url:"/api/docs/"+comment.doc_id+"/comments",params:{parent_id:comment.id}}).success(function(data){comment.comments=data;var commentsLength=comment.comments.length;for(i=0;i<commentsLength;i++)comment.comments[i].permalinkBase="comment",comment.comments[i].label="comment",comment.comments[i].parentPointer=comment;$scope.toggleReplies(comment,$event),$scope.loadingReplies[comment.id]=!1})):void("undefined"!==$scope.showReplies[comment.id]&&$scope.showReplies[comment.id]?($scope.showReplies[comment.id]=!1,$scope.$broadcast("commentRepliesHidden")):($scope.showReplies[comment.id]=!0,$scope.$broadcast("commentRepliesShown")))},$scope.toggleReplyForm=function(comment,$event){$scope.user&&""!==$scope.user.id?"undefined"!==$scope.showReplyForm[comment.id]&&$scope.showReplyForm[comment.id]?$scope.showReplyForm[comment.id]=!1:$scope.showReplyForm[comment.id]=!0:loginPopupService.showLoginForm($event)},$scope.shouldHighlightComment=function(comment){return $scope.subCommentId||comment.id!==$scope.commentId?!1:!0},$scope.shouldHighlightSubComment=function(comment){return comment.id===$scope.subCommentId?!0:!1},$scope.showLoginForm=function($event){loginPopupService.showLoginForm($event)}}]),angular.module("madisonApp.controllers").controller("ContentController",["$scope","$stateParams","$translate","pageService","SITE",function($scope,$stateParams,$translate,pageService,SITE){var page=$stateParams.page.replace(/-/g,"");pageService.setTitle($translate.instant("content."+page+".title",{title:SITE.name})),$scope.header=$translate.instant("content."+page+".header",{title:SITE.name}),$scope.body=$translate.instant("content."+page+".body",{title:SITE.name})}]),angular.module("madisonApp.controllers").controller("DashboardDocumentsController",["$scope","$http","$filter","growl","growlMessages","$state","$translate","pageService","SITE",function($scope,$http,$filter,growl,growlMessages,$state,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.admindocument.title",{title:SITE.name})),$scope.docs=[],$scope.categories=[],$scope.sponsors=[],$scope.statuses=[],$scope.dates=[],$scope.dateSort="",$scope.select2="",$scope.docSort="created_at",$scope.reverse=!0,$scope.newDoc={},$scope.select2Config={multiple:!0,allowClear:!0,placeholder:$translate.instant("content.admindocument.searchfilter")},$scope.dateSortConfig={allowClear:!0,placeholder:"Sort By Date"},$http.get("/api/docs").success(function(data){$scope.parseDocs(data)}).error(function(data){console.error("Unable to get documents: %o",data)}),$scope.createDocument=function(){growlMessages.destroyAllMessages();var title=$scope.newDoc.title;title&&title.trim()?$http.post("/api/docs",{title:title}).success(function(data){$state.go("edit-doc",{id:data.doc.id})}).error(function(){$scope.newDoc.title=null}):growl.error($translate.instant("form.admindocument.title.error"))},$scope.parseDocs=function(docs){angular.forEach(docs,function(doc){$scope.docs.push(doc),$scope.parseDocMeta(doc.categories,"categories"),$scope.parseDocMeta(doc.sponsor,"sponsors"),$scope.parseDocMeta(doc.statuses,"statuses"),angular.forEach(doc.dates,function(date){date.date=Date.parse(date.date)})})},$scope.parseDocMeta=function(collection,name){void 0!==collection&&0!==collection.length&&angular.forEach(collection,function(item){var found=$filter("getById")($scope[name],item.id);if(null===found)switch(name){case"categories":$scope.categories.push(item);break;case"sponsors":$scope.sponsors.push(item);break;case"statuses":$scope.statuses.push(item);break;default:console.error("Unknown meta name: "+name)}})},$scope.docFilter=function(doc){var show=!1;if(void 0!==$scope.select2&&""!==$scope.select2){var cont=!0,select2=$scope.select2.split("_"),type=select2[0],value=parseInt(select2[1],10);switch(type){case"category":angular.forEach(doc.categories,function(category){+category.id===value&&cont&&(show=!0,cont=!1)});break;case"sponsor":angular.forEach(doc.sponsor,function(sponsor){+sponsor.id===value&&cont&&(show=!0,cont=!1)});break;case"status":angular.forEach(doc.statuses,function(status){+status.id===value&&cont&&(show=!0,cont=!1)})}}else show=!0;return show}}]),angular.module("madisonApp.controllers").controller("DashboardEditorController",["$scope","$http","$timeout","$location","$filter","growl","$upload","modalService","Doc","$translate","pageService","SITE",function($scope,$http,$timeout,$location,$filter,growl,$upload,modalService,Doc,$translate,pageService,SITE){function clean_slug(string){return string.toLowerCase().replace(/[^a-zA-Z0-9\- ]/g,"").replace(/ +/g,"-")}pageService.setTitle($translate.instant("content.editdocument.title",{title:SITE.name})),$scope.doc={},$scope.sponsor={},$scope.status={},$scope.newdate={label:"",date:new Date},$scope.verifiedUsers=[],$scope.categories=[],$scope.introtext="",$scope.suggestedCategories=[],$scope.suggestedStatuses=[],$scope.dates=[],$scope.featuredImage=null,$scope.featuredDoc=!1;var abs=$location.absUrl(),id=abs.match(/.*\/(\d+)$/)[1];$scope.$watch("files",function(newValue,oldValue){newValue!==oldValue&&$scope.uploadImage($scope.files)}),$scope.getDoc=function(id){return $http.get("/api/docs/"+id).success(function(data){$scope.doc=data,angular.forEach(data.categories,function(category){$scope.categories.push(angular.copy(category.name))}),null!==$scope.doc.thumbnail&&($scope.featuredImage={path:$scope.doc.thumbnail+"?"+(new Date).getTime()}),pageService.setTitle($translate.instant("content.editdocument.title.loaded",{title:SITE.name,docTitle:data.title}))})},$scope.getAllCategories=function(){return $http.get("/api/docs/categories").success(function(data){angular.forEach(data,function(category){$scope.suggestedCategories.push(category.name)})}).error(function(data){console.error("Unable to get document categories: %o",data)})},$scope.getVerifiedUsers=function(){return $http.get("/api/user/verify").success(function(data){angular.forEach(data,function(verified){$scope.verifiedUsers.push(angular.copy(verified.user))})}).error(function(data){console.error("Unable to get verified users: %o",data)})},$scope.setSelectOptions=function(){$scope.categoryOptions={placeholder:$translate.instant("form.document.category.placeholder"),multiple:!0,simple_tags:!0,tokenSeparators:[","],tags:function(){return $scope.suggestedCategories},results:function(){return $scope.categories},initSelection:function(element,callback){var returned=[];angular.forEach($scope.categories,function(category,index){returned.push(angular.copy({id:index,text:category}))}),callback(returned)}},$scope.statusOptions={placeholder:$translate.instant("form.document.status.placeholder"),ajax:{url:"/api/docs/statuses",dataType:"json",data:function(term,page){},results:function(data,page){var returned=[];return angular.forEach(data,function(status){returned.push({id:status.id,text:status.label})}),{results:returned}}},data:function(){return $scope.suggestedStatuses},results:function(){return $scope.status},createSearchChoice:function(term){return{id:term,text:term}},initSelection:function(element,callback){callback($scope.status)},allowClear:!0},$scope.sponsorOptions={placeholder:$translate.instant("form.document.sponsor.placeholder"),allowClear:!0,ajax:{url:"/api/user/sponsors/all",dataType:"json",data:function(){},results:function(data){var returned=[];return data.success?(angular.forEach(data.sponsors,function(sponsor){var text="";switch(sponsor.sponsorType){case"group":text=$translate.instant("form.document.sponsor.groupflag",{name:sponsor.name});break;case"user":text=sponsor.fname+" "+sponsor.lname+" - "+sponsor.email}returned.push({id:sponsor.id,type:sponsor.sponsorType,text:text})}),{results:returned}):void alert(data.message)}},initSelection:function(element,callback){callback($scope.sponsor)}}};var docDone=$scope.getDoc(id);$scope.getAllCategories(),$scope.getVerifiedUsers(),$scope.setSelectOptions();var initCategories=!0,initSponsor=!0,initStatus=!0,initTitle=!0,initPrivate=!0,initSlug=!0,initContent=!0;docDone.then(function(){new Markdown.Editor(Markdown.getSanitizingConverter()).run(),$("#wmd-preview").css("overflow","scroll"),$("#wmd-preview").css("height",$("#wmd-input").height()+22),$("#wmd-input").scroll(function(){$("#wmd-preview").scrollTop($("#wmd-input").scrollTop())});var introTextTimeout=null;$scope.updateIntroText=function(newValue){introTextTimeout&&$timeout.cancel(introTextTimeout),introTextTimeout=$timeout(function(){$scope.saveIntroText(newValue)},3e3)},$scope.getDocSponsor().then(function(){$scope.$watch("sponsor",function(){initSponsor?$timeout(function(){initSponsor=!1}):$scope.saveSponsor()})}),$scope.getDocStatus().then(function(){$scope.$watch("status",function(){initStatus?$timeout(function(){initStatus=!1}):$scope.saveStatus()})}),$scope.getDocCategories().then(function(){$scope.$watch("categories",function(){initCategories?$timeout(function(){initCategories=!1}):$scope.saveCategories()})}),$scope.getIntroText(),$scope.getDocDates(),$scope.$watch("doc.title",function(){initTitle?$timeout(function(){initTitle=!1}):$scope.saveTitle()}),$scope.$watch("doc.slug",function(){if(initSlug)$timeout(function(){initSlug=!1});else{var safe_slug=$scope.doc.slug,sanitized_slug=clean_slug(safe_slug);safe_slug===sanitized_slug?$scope.saveSlug():(growl.error($translate.instant("errors.document.edit.slug")),console.log("Invalid slug, reverting"),$scope.doc.slug=sanitized_slug)}}),$scope.$watch("doc.private",function(){initPrivate?$timeout(function(){initPrivate=!1}):$scope.savePrivate()});var timeout=null;$scope.$watch("doc.content.content",function(){initContent?$timeout(function(){initContent=!1}):(timeout&&$timeout.cancel(timeout),timeout=$timeout(function(){$scope.saveContent()},5e3))})}),$scope.getShortUrl=function(){var opngv={username:"madison-robot",password:"MeV3MJJE",api:"http://opngv.us/yourls-api.php"},slug=$scope.doc.slug,long_url=$location.protocol()+"://"+$location.host()+"/docs/"+slug;$http({url:opngv.api,method:"JSONP",params:{callback:"JSON_CALLBACK",action:"shorturl",format:"jsonp",url:long_url,username:opngv.username,password:opngv.password}}).success(function(data){$scope.short_url=data.shorturl}).error(function(data){console.error("Error generating short url: %o",data),growl.error($translate.instant("errors.document.edit.shorturl"))})},$scope.statusChange=function(status){$scope.status=status},$scope.sponsorChange=function(sponsor){$scope.sponsor=sponsor},$scope.categoriesChange=function(categories){$scope.categories=categories},$scope.saveTitle=function(){return $http.post("/api/docs/"+$scope.doc.id+"/title",{title:$scope.doc.title}).success(function(data){console.log("Title saved successfully: %o",data)}).error(function(data){console.error("Error saving title for document:",data)})},$scope.savePrivate=function(){return $http.post("/api/docs/"+$scope.doc.id+"/private",{"private":$scope.doc["private"]}).success(function(data){console.log("Private saved successfully: %o",data)}).error(function(data){console.error("Error saving private for document:",data)})},$scope.saveSlug=function(){return $http.post("/api/docs/"+$scope.doc.id+"/slug",{slug:$scope.doc.slug}).success(function(data){console.log("Slug sent: %o",data)}).error(function(data){console.error("Error saving slug for document:",data)})},$scope.saveContent=function(){return $http.post("/api/docs/"+$scope.doc.id+"/content",{content:$scope.doc.content.content}).success(function(data){console.log("Content saved successfully: %o",data)}).error(function(data){console.error("Error saving content for document:",data)})},$scope.createDate=function(newDate){""!==$scope.newdate.label&&($scope.newdate.date=$filter("date")(newDate,"short"),$http.post("/api/docs/"+$scope.doc.id+"/dates",{date:$scope.newdate}).success(function(data){data.date=Date.parse(data.date),data.$changed=!1,$scope.dates.push(data),$scope.newdate={label:"",date:new Date}}).error(function(data){console.error("Unable to save date: %o",data)}))},$scope.deleteDate=function(date){$http["delete"]("/api/docs/"+$scope.doc.id+"/dates/"+date.id).success(function(){var index=$scope.dates.indexOf(date);$scope.dates.splice(index,1)}).error(function(){console.error("Unable to delete date: %o",date)})},$scope.saveDate=function(date){var sendDate=angular.copy(date);return sendDate.date=$filter("date")(sendDate.date,"short"),$http.put("/api/dates/"+date.id,{date:sendDate}).success(function(data){date.$changed=!1,console.log("Date saved successfully: %o",data)}).error(function(data){console.error("Unable to save date: %o (%o)",date,data)})},$scope.getDocDates=function(){return $http.get("/api/docs/"+$scope.doc.id+"/dates").success(function(data){angular.forEach(data,function(date,index){date.date=Date.parse(date.date),date.$changed=!1,$scope.dates.push(angular.copy(date)),$scope.$watch("dates["+index+"]",function(newitem,olditem){angular.equals(newitem,olditem)||void 0===newitem||(newitem.$changed=!0)},!0)})}).error(function(data){console.error("Error getting dates: %o",data)})},$scope.getDocCategories=function(){return $http.get("/api/docs/"+$scope.doc.id+"/categories").success(function(data){angular.forEach(data,function(category){$scope.categories.push(category.name)})}).error(function(data){console.error("Unable to get categories for document %o: %o",$scope.doc,data)})},$scope.getIntroText=function(){return $http.get("/api/docs/"+$scope.doc.id+"/introtext").success(function(data){$scope.introtext=data.meta_value}).error(function(data){console.error("Unable to get Intro Text for document %o: %o",$scope.doc,data)})},$scope.getDocSponsor=function(){return $http.get("/api/docs/"+$scope.doc.id+"/sponsor").success(function(data){if(void 0===data.sponsorType)return void($scope.sponsor=null);var text="";switch(data.sponsorType.toLowerCase()){case"group":text=$translate.instant("form.document.sponsor.groupflag",{name:data.name});break;case"user":text=data.fname+" "+data.lname+" - "+data.email}$scope.sponsor={id:data.id,type:data.sponsorType.toLowerCase(),text:text}}).error(function(data){console.error("Error getting document sponsor: %o",data)})},$scope.getDocStatus=function(){return $http.get("/api/docs/"+$scope.doc.id+"/status").success(function(data){void 0===data.id?$scope.status=null:$scope.status={id:data.id,text:data.label}}).error(function(data){console.error("Error getting document status: %o",data)})},$scope.getAllStatuses=function(){$http.get("/api/docs/statuses").success(function(data){angular.forEach(data,function(status){$scope.suggestedStatuses.push(status.label)})}).error(function(data){console.error("Unable to get document statuses: %o",data)})},$scope.saveStatus=function(){return $http.post("/api/docs/"+$scope.doc.id+"/status",{status:$scope.status}).success(function(data){console.log("Status saved successfully: %o",data)}).error(function(data){console.error("Error saving status: %o",data)})},$scope.saveSponsor=function(){return $http.post("/api/docs/"+$scope.doc.id+"/sponsor",{sponsor:$scope.sponsor}).success(function(data){console.log("Sponsor saved successfully: %o",data)}).error(function(data){console.error("Error saving sponsor: %o",data)})},$scope.saveCategories=function(){return $http.post("/api/docs/"+$scope.doc.id+"/categories",{categories:$scope.categories}).success(function(data){console.log("Categories saved successfully: %o",data)}).error(function(data){console.error("Error saving categories for document %o: %o \n %o",$scope.doc,$scope.categories,data)})},$scope.saveIntroText=function(introtext){return $http.post("/api/docs/"+$scope.doc.id+"/introtext",{"intro-text":introtext}).success(function(data){console.log("Intro Text saved successfully: %o",data)}).error(function(data){console.error("Error saving intro text for document %o: %o",$scope.doc,$scope.introtext)})},$scope.uploadImage=function(file){0!==file.length&&($scope.uploadProgress=0,$scope.uploadType="info",file&&1===file.length?$upload.upload({url:"/api/docs/"+$scope.doc.id+"/featured-image",file:file}).progress(function(event){var progressPercentage=parseInt(100*event.loaded/event.total,10);$scope.uploadProgress=progressPercentage}).success(function(data,status,headers,config){$scope.uploadType="success",$scope.featuredImage={path:data.imagePath+"?"+(new Date).getTime()}}).error(function(){$scope.uploadType="danger"})["finally"](function(){$timeout(function(){$scope.uploadProgress=null},5e3)}):(console.error("Error uploading %o",file),growl.error($translate.instant("errors.document.edit.image"))))},$scope.deleteFeaturedImage=function(){return $scope.doc.featured!==!0?$http["delete"]("/api/docs/"+$scope.doc.id+"/featured-image").success(function(){$scope.featuredImage=null,$scope.doc.thumbnail=null}):void growl.error($translate.instant("errors.document.edit.imagerequired"))},$scope.tryFeaturedDoc=function(){var featuredDoc=Doc.getFeaturedDoc();featuredDoc.$promise.then(function(){if(void 0!==featuredDoc.id){console.log(featuredDoc);var bodyText;bodyText=featuredDoc.id===$scope.doc.id?$translate.instant("errors.document.edit.unfeatured"):$translate.instant("errors.document.edit.multiplefeatured");var modalOptions={closeButtonText:$translate.instant("form.general.cancel"),actionButtonText:$translate.instant("form.document.featured.change"),headerText:$translate.instant("form.document.featured.confirm"),bodyText:bodyText},res=modalService.showModal({},modalOptions);res["catch"](function(){$scope.doc.featured=!$scope.doc.featured}),res.then(function(){$scope._setFeaturedDoc()})}else $scope._setFeaturedDoc()})},$scope._setFeaturedDoc=function(){return $http.post("/api/docs/featured",{id:$scope.doc.id})}}]),angular.module("madisonApp.controllers").controller("DashboardNotificationsController",["$scope","$http","SessionService","$translate","pageService","SITE",function($scope,$http,SessionService,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.sitenotifications.title",{title:SITE.name})),$scope.user=SessionService.user,$http.get("/api/user/"+$scope.user.id+"/notifications").success(function(data){$scope.notifications=data}).error(function(data){console.error("Error loading notifications: %o",data)}),$scope.$watch("notifications",function(newValue,oldValue){void 0!==oldValue&&$http.put("/api/user/"+$scope.user.id+"/notifications",{notifications:newValue}).error(function(data){console.error("Error updating notification settings: %o",data)})},!0)}]),angular.module("madisonApp.controllers").controller("DashboardSettingsController",["$scope","$http",function($scope,$http){$scope.admins=[],$scope.getAdmins=function(){$http.get("/api/user/admin").success(function(data){$scope.admins=data}).error(function(data){console.error(data)})},$scope.saveAdmin=function(admin){admin.saved=!1,$http.post("/api/user/admin",{admin:admin}).success(function(){admin.saved=!0}).error(function(data){console.error(data)})},$scope.init=function(){$scope.getAdmins()}}]),angular.module("madisonApp.controllers").controller("DashboardVerifyController",["$scope","$http","$translate","pageService","SITE",function($scope,$http,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.verifyusers.title",{title:SITE.name})),$scope.requests=[],$scope.formdata={status:"pending"},$scope.init=function(){$scope.getRequests()},$scope.getRequests=function(){$http.get("/api/user/verify",{params:$scope.formdata}).success(function(data){$scope.requests=data}).error(function(data){console.error(data)})},$scope.update=function(request,status){$http.post("/api/user/verify",{request:request,status:status}).success(function(){request.meta_value=status}).error(function(data){console.error(data)})}}]),angular.module("madisonApp.controllers").controller("DashboardVerifyGroupController",["$scope","$http","$translate","pageService","SITE",function($scope,$http,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.verifygroups.title",{title:SITE.name})),$scope.requests=[],$scope.formdata={status:"pending"},$scope.getRequests=function(){$http.get("/api/groups/verify",{params:$scope.formdata}).success(function(data){$scope.requests=data}).error(function(data){console.error(data)})},$scope.update=function(request,status){$http.post("/api/groups/verify",{request:request,status:status}).success(function(data){request.status=status}).error(function(data){console.error(data)})},$scope.getRequests()}]),angular.module("madisonApp.controllers").controller("DashboardVerifyUserController",["$scope","$http","$translate","pageService","SITE",function($scope,$http,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.verifyindependent.title",{title:SITE.name})),$scope.requests=[],$scope.formdata={status:"pending"},$scope.getRequests=function(){$http.get("/api/user/independent/verify",{params:$scope.formdata}).success(function(data){$scope.requests=data}).error(function(data){console.error(data)})},$scope.update=function(request,status){$http.post("/api/user/independent/verify",{request:request,status:status}).success(function(data){request.meta_value=status,location.reload()}).error(function(data){console.error(data)})},$scope.getRequests()}]),angular.module("madisonApp.controllers").controller("DocumentPageController",["$scope","$state","$timeout","growl","$location","$window","Doc","$sce","$stateParams","$http","loginPopupService","annotationService","$anchorScroll","AuthService","$translate","pageService","SITE",function($scope,$state,$timeout,growl,$location,$window,Doc,$sce,$stateParams,$http,loginPopupService,annotationService,$anchorScroll,AuthService,$translate,pageService,SITE){
$scope.annotations=[],$scope.activeTab="content",$scope.doc={},$scope.setSponsor=function(){try{$scope.doc.group_sponsor.length>0?$scope.doc.sponsor=$scope.doc.group_sponsor:$scope.doc.user_sponsor.length>0?($scope.doc.sponsor=$scope.doc.user_sponsor,$scope.doc.sponsor[0].display_name=$scope.doc.sponsor[0].fname+" "+$scope.doc.sponsor[0].lname):console.error("No sponsor found.")}catch(err){console.error(err)}},$scope.getSupported=function(){$scope.user&&$http.get("/api/users/"+$scope.user.id+"/support/"+$scope.doc.id).success(function(data){$scope._updateSupport(data)}).error(function(){console.error("Unable to get support info for user %o and doc %o",$scope.user,$scope.doc)})},$scope.support=function(supported,$event){$scope.user?$http.post("/api/docs/"+$scope.doc.id+"/support",{support:supported}).success(function(data){$scope._updateSupport(data)}).error(function(data){console.error("Error posting support: %o",data)}):loginPopupService.showLoginForm($event)},$scope.checkExists=function(doc){doc.id||(growl.error("That document does not exist!"),$state.go("index"))},$scope.loadContent=function(doc){return $scope.doc.content=Doc.getDocContent({id:doc.id}),$scope.doc.content.$promise.then(function(){$scope.doc.html=$sce.trustAsHtml($scope.doc.content.html),$scope.$broadcast("docContentUpdated")}),$scope.doc.content.$promise},$scope.loadIntrotext=function(doc){if(doc.introtext){var converter=new Markdown.Converter;$scope.introtext=$sce.trustAsHtml(converter.makeHtml(doc.introtext))}},$scope.checkActiveTab=function(){var subCommentHash=$location.hash().match(/^annsubcomment_([0-9]+)$/),annotationHash=$location.hash().match(/^annotation_([0-9]+)$/);$scope.secondtab=!1,subCommentHash||annotationHash||!$location.hash()?$scope.changeTab("content"):($scope.secondtab=!0,$scope.changeTab("comment"))},$scope.changeTab=function(activeTab){$scope.activeTab=activeTab},$scope.attachAnnotator=function(doc,user){var element=$("#doc_content");$timeout(function(){annotationService.createAnnotator(element,doc,user)})},$scope._updateSupport=function(data){$scope.doc.support=data.supports,$scope.doc.oppose=data.opposes,$scope.voted=null===data.support?!1:!0,$scope.$broadcast("supportUpdated"),null===data.support?($scope.supported=!1,$scope.opposed=!1):($scope.supported=data.support,$scope.opposed=!data.support)},$scope._calculateSupport=function(){$scope.doc.support_percent=0,$scope.doc.support>0&&($scope.doc.support_percent=Math.round(100*$scope.doc.support/($scope.doc.support+$scope.doc.oppose))),$scope.doc.oppose_percent=0,$scope.doc.oppose>0&&($scope.doc.oppose_percent=Math.round(100*$scope.doc.oppose/($scope.doc.support+$scope.doc.oppose)))},$scope.$on("annotationsUpdated",function(){$scope.annotations=annotationService.annotations,$location.$hash&&$scope.evalAsync(function(){$anchorScroll()})}),$scope.$on("supportUpdated",function(){$scope._calculateSupport()}),$scope.doc=Doc.getDocBySlug({slug:$stateParams.slug}),$scope.doc.$promise.then(function(doc){pageService.setTitle($translate.instant("content.document.title",{title:SITE.name,docTitle:doc.title})),$scope.setSponsor(),$scope.getSupported(),$scope.checkExists(doc),$scope.loadContent(doc).then(function(){$scope.attachAnnotator($scope.doc,$scope.user)}),"undefined"==typeof $scope.doc.comments&&($scope.doc.comments=[]),$scope.loadIntrotext(doc),$scope.checkActiveTab($scope.doc,$scope.user),$scope.$on("tocAdded",function(event,toc){$scope.toc=toc}),$scope.$on("sessionChanged",function(){$scope.attachAnnotator($scope.doc,$scope.user)}),$scope._calculateSupport()})}]),angular.module("madisonApp.controllers").controller("DocumentTocController",["$scope",function($scope){$scope.headings=[],$scope.$on("docContentUpdated",function(){var headings=$("#doc_content").find("h1,h2,h3,h4,h5,h6");if(headings.length>0)headings.each(function(i,elm){elm=$(elm),elm.attr("id")||elm.attr("id","heading-"+i),elm.addClass("anchor"),$scope.headings.push({title:elm.text(),tag:elm.prop("tagName"),link:elm.attr("id")})});else{$("#toc-column").remove();$("#content").parent()}})}]),angular.module("madisonApp.controllers").controller("GroupEditController",["$scope","$state","$stateParams","Group","$translate","pageService","SITE",function($scope,$state,$stateParams,Group,$translate,pageService,SITE){$scope.groupId=$stateParams.groupId;var title="";$scope.groupId?($scope.group=Group.get({id:$scope.groupId}),title="content.editgroup.title"):($scope.group=new Group,title="content.creategroup.title"),pageService.setTitle($translate.instant(title,{title:SITE.name})),$scope.saveGroup=function(){$scope.group.$save(function(group,headers){$state.go("group-management")})}}]),angular.module("madisonApp.controllers").controller("GroupManagementController",["$scope","$http","SessionService","$translate","pageService","SITE",function($scope,$http,SessionService,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.groupmanagement.title",{title:SITE.name})),$scope.user=SessionService.getUser(),$scope.$on("sessionChanged",function(){$scope.user=SessionService.getUser()}),$scope.user?$http.get("/api/user/"+$scope.user.id+"/groups").success(function(data){$scope.groups=data,angular.forEach($scope.groups,function(group){group.canEdit="owner"===group.role||"editor"===group.role})}):console.log($scope.user,SessionService.getUser(),SessionService)}]),angular.module("madisonApp.controllers").controller("GroupMembersController",["$scope","$stateParams","Group","$state","$translate","pageService","SITE",function($scope,$stateParams,Group,$state,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.groupmembers.title",{title:SITE.name})),$scope.group=Group.get({id:$stateParams.id}),$scope.group.$promise.then(function(){$scope.group.members=[],$scope.group.roles=[],$scope.group.roles=Group.getRoles(),Group.getMembers({id:$stateParams.id}).$promise.then(function(response){angular.forEach(response,function(member){$scope.group.members.push(member)})})}),$scope.updateMemberRole=function(member){Group.updateMemberRole({id:$stateParams.id,memberId:member.id,memberRole:member.role})},$scope.inviteMember=function(){Group.inviteMember({id:$stateParams.id,email:$scope.email,role:$scope.role}).$promise.then(function(){$state.go("manage-group-members",{id:$stateParams.id})})},$scope.removeMember=function(index){var member=$scope.group.members[index];Group.removeMember({id:$stateParams.id,memberId:member.id}).$promise.then(function(response){"success"===response.messages[0].severity&&$scope.group.members.splice(index,1)})}}]),angular.module("madisonApp.controllers").controller("HomePageController",["$scope","$filter","$sce","$translate","pageService","Doc","SITE",function($scope,$filter,$sce,$translate,pageService,Doc,SITE){pageService.setTitle($translate.instant("content.home.title",{title:SITE.name})),$scope.docs=[],$scope.featured=null,$scope.mostActive=[],$scope.mostRecent=[],$scope.categories=[],$scope.sponsors=[],$scope.statuses=[],$scope.dates=[],$scope.dateSort="",$scope.select2="",$scope.docSort="created_at",$scope.reverse=!0,$scope.startStep=0,Doc.query({order:$scope.docSort,order_dir:$scope.reverse?"DESC":"ASC"},function(data){$scope.parseDocs(data)}).$promise["catch"](function(data){console.error("Unable to get documents: %o",data)}),Doc.getFeaturedDoc(function(data){if($scope.featured=data,data.introtext){var converter=new Markdown.Converter;$scope.featured.introtext=$sce.trustAsHtml(converter.makeHtml(data.introtext))}}).$promise["catch"](function(data){console.error("Unable to get featured document: %o",data)}),Doc.query({order:"updated_at",order_dir:"DESC",limit:6},function(data){$scope.mostRecent=data}).$promise["catch"](function(data){console.error("Unable to get documents: %o",data)}),Doc.query({order:"activity",order_dir:"DESC",limit:6},function(data){$scope.mostActive=data}).$promise["catch"](function(data){console.error("Unable to get documents: %o",data)}),$scope.select2Config={multiple:!0,allowClear:!0,placeholder:"Filter documents by category, sponsor, or status"},$scope.dateSortConfig={allowClear:!0,placeholder:"Sort By Date"},$scope.filterByCategory=function(category){$scope.selectedCategory=category},$scope.clearCategoryFilter=function(){$scope.selectedCategory=null},$scope.categoryFilter=function(doc){var found=!1;return $scope.selectedCategory?(angular.forEach(doc.categories,function(category){return angular.equals(category.name,$scope.selectedCategory.name)?void(found=!0):void 0}),found):!0},$scope.parseDocs=function(docs){angular.forEach(docs,function(doc){$scope.docs.push(doc),$scope.parseDocMeta(doc.categories,"categories"),$scope.parseDocMeta(doc.sponsor,"sponsors"),$scope.parseDocMeta(doc.statuses,"statuses"),angular.forEach(doc.dates,function(date){date.date=Date.parse(date.date)})})},$scope.parseDocMeta=function(collection,name){0!==collection.length&&angular.forEach(collection,function(item){var found=$filter("getById")($scope[name],item.id);if(null===found)switch(name){case"categories":$scope.categories.push(item);break;case"sponsors":$scope.sponsors.push(item);break;case"statuses":$scope.statuses.push(item);break;default:console.error("Unknown meta name: "+name)}})},$scope.docFilter=function(doc){var show=!1;if(void 0!==$scope.select2&&""!==$scope.select2){var cont=!0,select2=$scope.select2.split("_"),type=select2[0],value=parseInt(select2[1],10);switch(type){case"category":angular.forEach(doc.categories,function(category){+category.id===value&&cont&&(show=!0,cont=!1)});break;case"sponsor":angular.forEach(doc.sponsor,function(sponsor){+sponsor.id===value&&cont&&(show=!0,cont=!1)});break;case"status":angular.forEach(doc.statuses,function(status){+status.id===value&&cont&&(show=!0,cont=!1)})}}else show=!0;return show}}]),angular.module("madisonApp.controllers").controller("IntroPageController",["$scope","$translate","pageService","SITE",function($scope,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.intro.title",{title:SITE.name})),$scope.siteName=SITE.name}]),angular.module("madisonApp.controllers").controller("LoginPageController",["$rootScope","$scope","$state","AuthService","growlMessages","$translate","pageService","$location","$http","SITE",function($rootScope,$scope,$state,AuthService,growlMessages,$translate,pageService,$location,$http,SITE){pageService.setTitle($translate.instant("content.login.title",{title:SITE.name})),$scope.credentials={email:"",password:"",remember:!1},$scope.login=function(){var login=AuthService.login($scope.credentials);growlMessages.destroyAllMessages(),login.then(function(){var url="/";$rootScope.returnTo&&(url=$rootScope.returnTo,$rootScope.returnTo=null),$http.get("/api/user/current").success(function(res){var user={};if(!$.isEmptyObject(res)&&Object.getOwnPropertyNames(res.user).length>0)for(var key in res.user)res.user.hasOwnProperty(key)&&(user[key]=res.user[key]);else user=null;AuthService.setUser(user),console.log("relocated",url),$location.url(url)})})},$scope.facebookLogin=function(){AuthService.facebookLogin()}}]),angular.module("madisonApp.controllers").controller("MyDocumentsController",["$scope","$http","$translate","growl","growlMessages","SessionService","AuthService","pageService","$state","USER_ROLES","SITE",function($scope,$http,$translate,growl,growlMessages,SessionService,AuthService,pageService,$state,USER_ROLES,SITE){"use strict";pageService.setTitle($translate.instant("content.mydocuments.title",{title:SITE.name})),$scope.newDoc={title:"",group_id:null},$scope.docs=[],$scope.canCreate=!1,$scope.independent_sponsor=!1,AuthService.getUser().then(function(){$scope.canCreate=!1,$scope.groupOptions=[],AuthService.getMyDocs(),AuthService.isAuthorized([USER_ROLES.admin,USER_ROLES.independent,USER_ROLES.groupMember])&&($scope.canCreate=!0),$scope.independent_sponsor=SessionService.user.independent_sponsor;for(var i=0;i<SessionService.groups.length;i++){var group=SessionService.groups[i];"active"===group.status&&(console.log(group.name,group.status),$scope.groupOptions.push([group.id,group.name]))}$scope.$on("docsChanged",function(){$scope.docs=SessionService.getDocs()}),$scope.createDocument=function(){growlMessages.destroyAllMessages(),$scope.newDoc.title&&$scope.newDoc.title.trim()?$http.post("/api/docs",$scope.newDoc).success(function(data){$scope.newDoc.title="",$state.go("edit-doc",{id:data.doc.id})}).error(function(error){growl.error($translate.instant("errors.document.new.general")),console.log("Error: ",error)}):growl.error($translate.instant("errors.document.new.notitle"))}})}]),angular.module("madisonApp.controllers").controller("OauthLoginController",["$state","$translate","growl",function($state,$translate,growl){growl.success($translate.instant("form.login.success")),$state.go("index")}]),angular.module("madisonApp.controllers").controller("PasswordResetController",["$scope","$http","$state","$translate","growl","pageService","SITE",function($scope,$http,$state,$translate,growl,pageService,SITE){pageService.setTitle($translate.instant("content.resetpassword.title",{title:SITE.name})),$scope.reset=function(){$http.post("/api/password/remind",{email:$scope.email}).success(function(){$state.go("login")}).error(function(response){console.error(response)})}}]),angular.module("madisonApp.controllers").controller("PasswordResetLandingController",["$scope","$stateParams","$http","$state","growl","$translate","pageService","SITE",function($scope,$stateParams,$http,$state,growl,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.resetpassword.title",{title:SITE.name})),$scope.token=$stateParams.token,$scope.savePassword=function(){return $scope.password!==$scope.password_confirmation?void growl.error($translate.instant("errors.resetpassword.passwordmatch")):void $http.post("/api/password/reset",{email:$scope.email,password:$scope.password,password_confirmation:$scope.password_confirmation,token:$scope.token}).success(function(){$state.go("login")}).error(function(response){growl.error($translate.instant("errors.resetpassword.general")),console.error(response)})}}]),angular.module("madisonApp.controllers").controller("ResendConfirmationController",["$scope","$http","$state","$stateParams","$translate","pageService","SITE",function($scope,$http,$state,$stateParams,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.confirmationresend.title",{title:SITE.name})),$stateParams.token&&$http.post("/api/user/verify-email",{token:$stateParams.token}).success(function(response){$state.go("index")}).error(function(response){$state.go("login"),console.error(response)}),$scope.resendConfirmation=function(){$http.post("/api/verification/resend",{email:$scope.email,password:$scope.password}).success(function(response){$state.go("login")}).error(function(response){console.error(response)})}}]),angular.module("madisonApp.controllers").controller("SignupPageController",["$scope","$state","AuthService","growl","growlMessages","$translate","pageService","SITE",function($scope,$state,AuthService,growl,growlMessages,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.signup.title",{title:SITE.name})),$scope.signup=function(){var signup=AuthService.signup($scope.credentials);growlMessages.destroyAllMessages(),signup.success(function(){$scope.credentials={fname:"",lname:"",email:"",password:""},AuthService.getUser(),$state.go("index"),growl.success($translate.instant("form.signup.success"))}).error(function(response){console.error(response),response.messages||growl.error($translate.instant("form.signup.error"))})}}]),angular.module("madisonApp.controllers").controller("SiteSettingsController",function($scope,$http,modalService,Doc,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.sitesettings.title",{title:SITE.name}));var featuredDoc=Doc.getFeaturedDoc();$scope.resetting=!1,featuredDoc.$promise.then(function(){$scope.currentFeatured={id:featuredDoc.id,text:featuredDoc.title},$scope.$watch("currentFeatured",function(newValue,oldValue){if($scope.resetting)return void($scope.resetting=!1);if(!angular.equals(newValue,oldValue)){var modalOptions={closeButtonText:$translate.instant("form.general.cancel"),actionButtonText:$translate.instant("form.document.featured.change"),headerText:$translate.instant("form.document.featured.change"),bodyText:$translate.instant("form.document.featured.confirm")},res=modalService.showModal({},modalOptions);res["catch"](function(){$scope.resetting=!0,$scope.currentFeatured={id:featuredDoc.id,text:featuredDoc.title}}),res.then(function(){$scope._setFeaturedDoc($scope.currentFeatured.id)})}})}),$scope.featuredOptions={minimumInputLength:3,multiple:!1,closeOnSelect:!0,query:function(options){var i,data={results:[]};$http.get("/api/docs/?title="+options.term).then(function(response){for(i=0;i<response.data.length;i++)data.results.push({id:response.data[i].id,text:response.data[i].title});options.callback(data)})}},$scope._setFeaturedDoc=function(id){return $http.post("/api/docs/featured",{id:id})}}),angular.module("madisonApp.controllers").controller("UserEditPageController",["$scope","SessionService","AuthService","growl","$translate","pageService","SITE",function($scope,SessionService,AuthService,growl,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.edituser.title",{title:SITE.name})),$scope.verified=SessionService.verified,$scope.$on("sessionChanged",function(){$scope.verified=SessionService.verified}),$scope.saveUser=function(){$scope.user.password?angular.equals($scope.user.password,$scope.password_confirmation)?AuthService.saveUser($scope.user):growl.error($translate.instant("errors.resetpassword.passwordmatch")):AuthService.saveUser($scope.user),$scope.password_confirmation=null}}]),angular.module("madisonApp.controllers").controller("UserNotificationsController",["$scope","$http","SessionService","growl","$translate","pageService","SITE",function($scope,$http,SessionService,growl,$translate,pageService,SITE){$scope.user=SessionService.user,pageService.setTitle($translate.instant("content.notificationsettings.title",{title:SITE.name})),$http.get("/api/user/"+$scope.user.id+"/notifications").success(function(data){$scope.notifications=data}).error(function(data){console.error("Error loading notifications: %o",data)}),$scope.$watch("notifications",function(newValue,oldValue){void 0!==oldValue&&$http.put("/api/user/"+$scope.user.id+"/notifications",{notifications:newValue}).error(function(data){console.error("Error updating notification settings: %o",data)})},!0)}]),angular.module("madisonApp.controllers").controller("UserPageController",["$scope","$http","$location","$translate","pageService","SITE",function($scope,$http,$location,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.users.title",{title:SITE.name})),$scope.user={},$scope.meta="",$scope.docs=[],$scope.activities=[],$scope.verified=!1,$scope.getUser=function(){var abs=$location.absUrl(),id=abs.match(/.*\/(\d+)$/);id=id[1],$http.get("/api/user/"+id).success(function(data){$scope.user=angular.copy(data),$scope.meta=angular.copy(data.user_meta),angular.forEach(data.docs,function(doc){$scope.docs.push(doc)}),angular.forEach(data.comments,function(comment){comment.label="comment",$scope.activities.push(comment)}),angular.forEach(data.annotations,function(annotation){annotation.label="annotation",$scope.activities.push(annotation)}),angular.forEach($scope.user.user_meta,function(meta){var cont=!0;"verify"===meta.meta_key&&"verified"===meta.meta_value&&cont&&($scope.verified=!0,cont=!1)})}).error(function(data){console.error("Unable to retrieve user: %o",data)})},$scope.showVerified=function(){return $scope.user.docs&&$scope.user.docs.length>0?!0:!1},$scope.activityOrder=function(activity){return Date.parse(activity.created_at)},$scope.getUser()}]),angular.module("madisonApp.controllers").controller("UserSponsorPageController",["$scope","$http","$location","SessionService","AuthService","growl","growlMessages","PROVINCES","$translate","pageService","SITE",function($scope,$http,$location,SessionService,AuthService,growl,growlMessages,PROVINCES,$translate,pageService,SITE){pageService.setTitle($translate.instant("content.sponsorrequest.title",{title:SITE.name})),$scope.provinces=[],$scope.formData={};var provinces=PROVINCES.US;$scope.provincesInit=function(provinces){angular.forEach(provinces,function(name,value){$scope.provinces.push({name:name,value:value})})},$scope.provincesInit(provinces),$scope.loadData=function(){$http.get("/api/user/current").success(function(data){console.log("user data",data);var formFields=["address1","address2","city","state","postal_code","phone"];for(var i in formFields){var field=formFields[i];$scope.formData[field]=data.user[field]}}).error(function(data){growl.error("Error getting data."),console.log("Error getting data.",data)})},$scope.loadData(),$scope.saveUser=function(){growlMessages.destroyAllMessages(),$http.put("/api/user/sponsor",$scope.formData).success(function(data){$location.path("/user/edit/"+$scope.user.id).replace(),growl.info("Your contact info was updated.  We'll be in touch soon!")}).error(function(data){console.error("Error posting comment: %o",data)})}}]),angular.module("madisonApp.directives",[]),angular.module("madisonApp.directives").directive("accountDropdown",["AuthService","SessionService","$location","growl",function(AuthService,SessionService,$location,growl){return{scope:!0,link:function(scope){scope.$on("sessionChanged",function(){scope.user=SessionService.user}),scope.logout=function(){var logout=AuthService.logout();logout.then(function(){growl.success("You have been successfully logged out."),AuthService.getUser(),$location.path("/")})}},templateUrl:"/templates/partials/account-dropdown.html"}}]),angular.module("madisonApp.directives").directive("activitySubComment",["growl","$anchorScroll","$timeout",function(growl,$anchorScroll,$timeout){return{restrict:"A",transclude:!0,templateUrl:"/templates/activity-sub-comment.html",compile:function(){return{post:function(scope,element,attrs){var commentLink=element.find(".subcomment-link").first(),linkPath=window.location.origin+window.location.pathname+"#annsubcomment_"+attrs.subCommentId;$(commentLink).attr("data-clipboard-text",linkPath);var client=new ZeroClipboard(commentLink);client.on("aftercopy",function(event){scope.$apply(function(){growl.success("Link copied to clipboard.")})}),$timeout(function(){$anchorScroll()},0)}}}}}]),angular.module("madisonApp.directives").directive("adminBreadcrumb",["$location",function($location){return{restrict:"A",templateUrl:"/templates/directives/admin-breadcrumb.html",link:function(scope){function camelCase(match,group1,group2){return" "+group2.toUpperCase()}scope.crumbs=[];var crumb,label,current,crumbs=$location.$$path.substring(1).split("/"),link="",i=0;for(i=0;i<crumbs.length-1;i++)crumb=crumbs[i],link+="/"+crumb,label=crumb.toLowerCase().replace(/(^|-)(.)/g,camelCase),crumb={link:link,label:label},scope.crumbs.push(crumb);current=crumbs.pop(),label=current.toLowerCase().replace(/(^|-)(.)/g,camelCase),crumb={label:label},scope.crumbs.push(crumb)}}}]),angular.module("madisonApp.directives").directive("annotationItem",["growl",function(growl){return{restrict:"A",transclude:!0,templateUrl:"/templates/annotation-item.html",compile:function(){return{post:function(scope,element,attrs){var commentLink=element.find(".comment-link").first(),linkPath=window.location.origin+window.location.pathname+"#"+attrs.activityItemLink;$(commentLink).attr("data-clipboard-text",linkPath);var client=new ZeroClipboard(commentLink);client.on("aftercopy",function(event){scope.$apply(function(){growl.success("Link copied to clipboard.")})})}}}}}]),angular.module("madisonApp.directives").directive("commentItem",["growl",function(growl){return{restrict:"A",transclude:!0,templateUrl:"/templates/comment-item.html",compile:function(){return{post:function(scope,element,attrs){var commentLink=element.find(".comment-link").first(),linkPath=window.location.origin+window.location.pathname+"#"+attrs.activityItemLink;$(commentLink).attr("data-clipboard-text",linkPath);var client=new ZeroClipboard(commentLink);client.on("aftercopy",function(event){scope.$apply(function(){growl.success("Link copied to clipboard.")})})}}}}}]),angular.module("madisonApp.directives").directive("commentActions",["loginPopupService","SessionService","$http","$location","growl",function(loginPopupService,SessionService,$http,$location,growl){return{restrict:"E",templateUrl:"/templates/partials/comment-actions.html",scope:{obj:"=object"},controller:function($scope){function buildPermalink(comment){var hash="#"+comment.permalinkBase+"_";return hash+=comment.parent_id?comment.parent_id+"-"+comment.id:comment.id,window.location.origin+window.location.pathname+hash}$scope.permalink=buildPermalink($scope.obj),$scope.user=SessionService.user,$scope.addAction=function(activity,action,$event){$scope.user&&""!==$scope.user.id?$http.post("/api/docs/"+activity.doc_id+"/"+activity.label+"s/"+activity.id+"/"+action).success(function(data){activity.likes=data.likes,activity.flags=data.flags}).error(function(data){console.error(data)}):loginPopupService.showLoginForm($event)}},compile:function(){return{post:function(scope,element,attrs){var link=element.find(".link"),client=new ZeroClipboard(link);client.on("aftercopy",function(event){scope.$apply(function(){growl.success("Link copied to clipboard.")})})}}}}}]),angular.module("madisonApp.directives").directive("docComments",function(){return{restrict:"AECM",templateUrl:"/templates/doc-comments.html"}}),angular.module("madisonApp.directives").directive("docLink",function($http,$compile){function link(scope,elem,attrs){$http.get("/api/docs/"+attrs.docId).success(function(data){var html='<a href="/docs/'+data.slug+'">'+data.title+"</a>",e=$compile(html)(scope);elem.replaceWith(e)}).error(function(data){console.error("Unable to retrieve document %o: %o",attrs.docId,data)})}return{restrict:"AECM",link:link}}),angular.module("madisonApp.directives").directive("docListItem",function(){return{restrict:"A",templateUrl:"/templates/directives/doc-list-item.html"}}),angular.module("madisonApp.directives").directive("docToc",["$timeout",function($timeout){return{restrict:"A",templateUrl:"/templates/directives/doc-toc.html",link:function($scope,element){$scope.headings=[],$scope.$on("docContentUpdated",function(){$timeout(function(){var doc_content=$("#doc_content"),headings=doc_content.find("h1,h2,h3,h4,h5,h6");headings.length>0?(headings.each(function(i,elm){elm=$(elm),elm.attr("id")||elm.attr("id","heading-"+i),elm.addClass("anchor"),$scope.headings.push({title:elm.text(),tag:elm.prop("tagName"),link:elm.attr("id")})}),$scope.$emit("tocAdded",!0),$scope.tocShow=!0):($scope.$emit("tocAdded",!1),element.remove()),$(".affix-elm").each(function(i,elm){elm=$(elm);var elmtop=0;elm.data("offset-top")&&(elmtop=elm.data("offset-top"));var elmbottom=0;elm.data("offset-bottom")&&(elmbottom=elm.data("offset-bottom")),elm.affix({offset:{top:elmtop,bottom:elmbottom}})})})},0,!1),$scope.tocOpen=!1,$scope.toggleToc=function(){$scope.tocOpen=!$scope.tocOpen},$scope.tocShow=!1}}}]),angular.module("madisonApp.directives").directive("loginForm",["AuthService","loginPopupService","growl","$state",function(AuthService,loginPopupService,growl,$state){return{restrict:"A",templateUrl:"/templates/partials/loginForm.html",link:function(scope,element){element.css("top",loginPopupService.top),element.css("left",loginPopupService.left)},controller:function($scope){$scope.switchState=function(stateString){$scope.state=stateString},$scope.login=function(email,password,remember){var credentials={email:email,password:password,remember:remember},login=AuthService.login(credentials);login.then(function(){loginPopupService.closeLoginForm(),growl.success("You have been logged in"),$state.go($state.current,null,{reload:!0})})},$scope.signup=function(fname,lname,email,password){var credentials={fname:fname,lname:lname,email:email,password:password},signup=AuthService.signup(credentials);signup.then(function(){growl.success("Welcome to Madison!  We just sent you an email.  Please click on the activation link to log in."),$state.go($state.current,null,{reload:!0}),loginPopupService.closeLoginForm()})},$scope.closePopup=function(){loginPopupService.closeLoginForm()}}}}]),angular.module("madisonApp.directives").directive("ngBlur",function(){return function(scope,elem,attrs){elem.bind("blur",function(){scope.$apply(attrs.ngBlur)})}}),angular.module("madisonApp.directives").directive("profileCompletionMessage",["$http",function($http){return{restrict:"A",templateUrl:"/templates/profile-completion-message.html",link:function(scope){scope.updateEmail=function(newEmail,newPassword){$http.put("/api/user/"+scope.user.id+"/edit/email",{email:newEmail,password:newPassword}).success(function(){scope.user.email=newEmail}).error(function(data){console.error("Error updating user email: %o",data)})}}}}]),angular.module("madisonApp.directives").directive("socialLogin",["AuthService",function(AuthService){return{restrict:"A",scope:{message:"@message"},templateUrl:"/templates/social-login.html",controller:function($scope){$scope.facebookLogin=function(){AuthService.facebookLogin()},$scope.twitterLogin=function(){AuthService.twitterLogin()},$scope.linkedinLogin=function(){AuthService.linkedinLogin()}}}}]),angular.module("madisonApp.directives").directive("stateSelect",[function(){return{restrict:"A",templateUrl:"/templates/partials/state-select.html",scope:!0,link:function($scope,element,attributes){$scope.emptyName="Select State"},controller:["$scope",function($scope){$scope.states=[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District Of Columbia",abbreviation:"DC"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}]}]}}]),angular.module("madisonApp.directives").directive("subcommentLink",["growl","$anchorScroll","$timeout",function(growl,$anchorScroll,$timeout){return{restrict:"A",template:'<span class="glyphicon glyphicon-link" title="Copy link to clipboard"></span>',compile:function(){return{post:function(scope,element,attrs){var commentLink=element,linkPath=window.location.origin+window.location.pathname+"#subcomment_"+attrs.subCommentId;
$(commentLink).attr("data-clipboard-text",linkPath);var client=new ZeroClipboard(commentLink);client.on("aftercopy",function(event){scope.$apply(function(){growl.success("Link copied to clipboard.")})}),$timeout(function(){$anchorScroll()},0)}}}}}]),angular.module("madisonApp.directives").directive("updateTitle",["$rootScope","$timeout",function($rootScope,$timeout){return{link:function(scope,element){var listener=function(event,toState){var title="Madison";toState.data&&toState.data.title&&(title=toState.data.title),$timeout(function(){element.text(title)},0,!1)};$rootScope.$on("$stateChangeSuccess",listener)}}}]),angular.module("madisonApp.filters",[]),angular.module("madisonApp.filters").filter("getById",function(){return function(input,id){var i=0,len=input.length;for(i;len>i;i++)if(+input[i].id===+id)return input[i];return null}}),angular.module("madisonApp.filters").filter("gravatar",function(){return function(email){var hash="";return void 0!==email&&(hash=CryptoJS.MD5(email.toLowerCase())),hash.toString(CryptoJS.enc.Hex)}}),angular.module("madisonApp.filters").filter("parseDate",function(){return function(date){return Date.parse(date)}}),angular.module("madisonApp.filters").filter("toArray",function(){return function(obj){return obj instanceof Object?_.map(obj,function(val,key){return val.$key=key,val}):obj}}),angular.module("madisonApp.prompts",[]),angular.module("madisonApp.prompts").directive("prompts",[function(){return{restrict:"A",templateUrl:"/templates/partials/prompts.html",scope:{reference:"@",inline:"="},controller:["$scope","prompts","promptMessages",function($scope,prompts,promptMessages){$scope.promptMessages=promptMessages,$scope.alertClasses=function(message){return{"prompt-success":"success"===message.severity,"prompt-error":"error"===message.severity,"prompt-danger":"error"===message.severity,"prompt-info":"info"===message.severity,"prompt-warning":"warning"===message.severity}}}]}}]),angular.module("madisonApp.prompts").provider("prompts",function(){this.$get=["$rootScope","promptMessages","$sce","$interpolate","$timeout",function($rootScope,promptMessages,$sce,$interpolate,$timeout){function broadcastPrompt(message){var polation=$interpolate(message.text);message.text=polation(message.variables);var addedPrompt=promptMessages.addMessage(message);return $rootScope.$broadcast("promptMessage",message),addedPrompt}function sendPrompt(text,severity){var message={text:text,severity:severity,destroy:function(){promptMessages.deletePrompt(message)},setText:function(newText){message.text=$sce.trustAsHtml(String(newText))}};return broadcastPrompt(message)}function warning(text){return sendPrompt(text,"warning")}function error(text){return sendPrompt(text,"error")}function info(text){return sendPrompt(text,"info")}function success(text){return sendPrompt(text,"success")}return{warning:warning,error:error,info:info,success:success}}]}),angular.module("madisonApp.prompts").service("promptMessages",["$sce","$timeout",function($sce,$timeout){"use strict";return this.messages=[],this.addMessage=function(message){this.messages.push(message)},this.getAllMessages=function(message){return this.messages},this.destroyAllMessages=function(){angular.forEach(this.messages,function(message){message.destroy()}),this.messages=[]},this.deleteMessage=function(message){console.log("deleting %o",message);var index=this.messages.indexOf(message);index>-1&&(this.messages[index].close=!0,this.messages.splice(index,1))},this}]),angular.module("madisonApp.translate",["pascalprecht.translate"]).config(function($translateProvider){$translateProvider.useStaticFilesLoader({prefix:"/locales/",suffix:".json"}),$translateProvider.addInterpolation("$translateMessageFormatInterpolation"),$translateProvider.useSanitizeValueStrategy("sanitizeParameters"),$translateProvider.usePostCompiling(!0),$translateProvider.use("en_US")}),angular.module("madisonApp.resources",[]),angular.module("madisonApp.resources").factory("Doc",function($resource){var Doc=$resource("/api/docs/:id",[],{getDocBySlug:{method:"GET",url:"/api/docs/slug/:slug",params:{slug:"@slug"}},getDocContent:{method:"GET",url:"/api/docs/:id/content",params:{id:"@id"}},getFeaturedDoc:{method:"GET",url:"/api/docs/featured"}});return Doc}),angular.module("madisonApp.resources").factory("Group",function($resource){var Group=$resource("/api/groups/:id",[],{getMembers:{method:"GET",url:"/api/groups/:id/members",isArray:!0},getRoles:{method:"GET",url:"/api/groups/roles",isArray:!0},updateMemberRole:{method:"PUT",url:"/api/groups/:id/members/:memberId",params:{id:"@id",memberId:"@memberId"}},inviteMember:{method:"PUT",url:"/api/groups/:id/invite",params:{id:"@id"}},removeMember:{method:"DELETE",url:"/api/groups/:id/members/:memberId",params:{id:"@id",memberId:"@memberId"}}});return Group}),angular.module("madisonApp.services",[]),angular.module("madisonApp.services").service("annotationService",function($rootScope,$sce,$location,AuthService,SessionService,loginPopupService){var converter=new Markdown.Converter;return this.annotations=[],this.annotationGroups={},this.annotator=null,this.count=0,this.setAnnotations=function(annotations){var parentElements="h1,h2,h3,h4,h5,h6,li,p";angular.forEach(annotations,function(annotation){annotation.html=$sce.trustAsHtml(converter.makeHtml(annotation.text)),this.annotations.push(annotation);var annotationParentId,annotationParent=$(annotation.highlights[0]).parents(parentElements).first();annotationParent.prop("id")?annotationParentId=annotationParent.prop("id"):(this.count++,annotationParentId="annotationGroup-"+this.count,annotationParent.prop("id",annotationParentId)),"undefined"===(typeof this.annotationGroups[annotationParentId]).toLowerCase()&&(this.annotationGroups[annotationParentId]={annotations:[],parent:annotationParent,parentId:annotationParentId,commentCount:0}),this.annotationGroups[annotationParentId].annotations.push(annotation),this.annotationGroups[annotationParentId].commentCount+=annotation.comments.length},this),this.broadcastUpdate()},this.addAnnotation=function(annotation){if(void 0===annotation.id)var interval=window.setInterval(function(){this.addAnnotation(annotation),window.clearInterval(interval)}.bind(this),500);else annotation.html=$sce.trustAsHtml(converter.makeHtml(annotation.text)),this.annotations.push(annotation),this.broadcastUpdate()},this.destroyAnnotator=function(){null!==this.annotator&&(this.annotator=null,delete this.annotator),this.annotations=[]},this.createAnnotator=function(element,doc){var user=SessionService.getUser(),path=$location.path(),origin=$location.host(),userId=null===user?null:user.id;this.annotator=element.annotator({readOnly:!AuthService.isAuthenticated()}),this.annotator.annotator("addPlugin","Unsupported"),this.annotator.annotator("addPlugin","Tags"),this.annotator.annotator("addPlugin","Markdown"),this.annotator.annotator("addPlugin","Store",{annotationData:{uri:path,comments:[]},prefix:"/api/docs/"+doc.id+"/annotations",urls:{create:"",read:"/:id",update:"/:id",destroy:"/:id",search:"/search"}}),this.annotator.annotator("addPlugin","Permissions",{user:user,permissions:{read:[],update:[userId],"delete":[userId],admin:[userId]},showViewPermissionsCheckbox:!1,showEditPermissionsCheckbox:!1,userId:function(user){return user&&user.id?user.id:user},userString:function(user){return user&&user.name?user.name:user}}),this.annotator.annotator("addPlugin","Madison",{user:user,doc:doc,annotationService:this,showLoginForm:function(event){loginPopupService.showLoginForm(event)},path:path,origin:origin})},this.broadcastUpdate=function(){$rootScope.$broadcast("annotationsUpdated")},this.broadcastSet=function(){$rootScope.$broadcast("annotationsSet")},this}),angular.module("madisonApp.services").factory("AuthService",["$http","SessionService","USER_ROLES","growl",function($http,SessionService,USER_ROLES,growl){"use strict";var authService={};return authService.setUser=function(user){SessionService.create(user)},authService.getUser=function(){var user={},groups=[],activeGroupId=null;return $http.get("/api/user/current").then(function(res){var key;if(Object.getOwnPropertyNames(res.data).length>0){for(key in res.data.user)res.data.user.hasOwnProperty(key)&&(user[key]=res.data.user[key]);groups=res.data.groups,activeGroupId=res.data.activeGroupId}else user=null,groups=null,activeGroupId=null;SessionService.create(user,groups,activeGroupId)})},authService.saveUser=function(user){return $http.put("/api/user/edit/"+user.id,{password:user.password,verify_request:user.verify_request,email:user.email,fname:user.fname,lname:user.lname,url:user.url,phone:user.phone}).then(function(res){console.log(res),authService.getUser()})},authService.setActiveGroup=function(groupId){return $http.post("/api/groups/active/"+groupId).then(function(){authService.getUser()})},authService.removeActiveGroup=function(){return $http.post("/api/groups/active/0").then(function(){authService.getUser()})},authService.getMyDocs=function(){return $http.get("/api/user/"+SessionService.user.id+"/docs").success(function(data){SessionService.setDocs(data)}).error(function(response){growl.error("There was an error retrieving your documents."),console.error(response)})},authService.login=function(credentials){return $http.post("/api/user/login",credentials).then(function(){authService.getUser()})},authService.facebookLogin=function(){authService._oauthLogin("/api/user/facebook-login","Facebook")},authService.twitterLogin=function(){authService._oauthLogin("/api/user/twitter-login","Twitter")},authService.linkedinLogin=function(){authService._oauthLogin("/api/user/linkedin-login","LinkedIn")},authService._oauthLogin=function(url,name){return $http.get(url).then(function(res){200===res.status?window.location.href=res.data.authUrl:growl.error("There was an error logging in with "+name+".")})},authService.isAuthenticated=function(){return!!SessionService.user},authService.isAuthorized=function(authorizedRoles){var authorized=!1;return angular.isArray(authorizedRoles)||(authorizedRoles=[authorizedRoles]),-1!==authorizedRoles.indexOf(USER_ROLES.all)?authorized=!0:authService.isAuthenticated()?(-1!==authorizedRoles.indexOf(USER_ROLES.basic)&&(authorized=!0),-1!==authorizedRoles.indexOf(USER_ROLES.independent)&&SessionService.user.independent_sponsor===!0&&(authorized=!0),-1!==authorizedRoles.indexOf(USER_ROLES.groupMember)&&SessionService.groups.length>0&&(authorized=!0),SessionService.user.admin===!0&&(authorized=!0)):-1!==authorizedRoles.indexOf(USER_ROLES.guest)&&(authorized=!0),authorized},authService.logout=function(){var logout=$http.get("/api/user/logout");return SessionService.destroy(),logout},authService.signup=function(credentials){var signup=$http.post("/api/user/signup",credentials);return signup},authService}]),angular.module("madisonApp.services").factory("pageService",function(){var title="";return{title:function(){return title},setTitle:function(newTitle){title=newTitle}}}),angular.module("madisonApp.services").factory("loginPopupService",["$rootScope","$state",function($rootScope,$state){var loginPopupService={loggingIn:!1,state:null};return loginPopupService.showLoginForm=function(event){this.loggingIn=!0,$rootScope.$broadcast("loggingIn")},loginPopupService.closeLoginForm=function(){this.loggingIn=!1,$rootScope.$broadcast("loggingIn")},loginPopupService}]),angular.module("madisonApp.services").service("modalService",["$modal",function($modal){var modalDefaults={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"/templates/modal.html"},modalOptions={closeButtonText:"Close",actionButtonText:!1,headerText:"Notice",bodyText:"Hmm... someone forgot the content here..."};this.showModal=function(customModalDefaults,customModalOptions){return customModalDefaults||(customModalDefaults={}),customModalDefaults.backdrop=!0,this.show(customModalDefaults,customModalOptions)},this.show=function(customModalDefaults,customModalOptions){var tempModalDefaults={},tempModalOptions={};return angular.extend(tempModalDefaults,modalDefaults,customModalDefaults),angular.extend(tempModalOptions,modalOptions,customModalOptions),tempModalDefaults.controller||(tempModalDefaults.controller=function($scope,$modalInstance){$scope.modalOptions=tempModalOptions,$scope.modalOptions.ok=function(result){$modalInstance.close(result)},$scope.modalOptions.close=function(result){$modalInstance.dismiss("cancel")}}),$modal.open(tempModalDefaults).result}}]),angular.module("madisonApp.services").service("SessionService",function($rootScope,$filter){"use strict";return this.user=null,this.groups=[],this.activeGroup=null,this.docs={independent:[],group:[]},this.create=function(user,groups,activeGroupId){this.user=user,"undefined"!=typeof groups&&(this.groups=groups,null!==activeGroupId?this._setActiveGroup(activeGroupId):null!==this.activeGroup&&(this.activeGroup=null,$rootScope.$broadcast("activeGroupChanged"))),$rootScope.$broadcast("sessionChanged")},this.destroy=function(){this.user=null,$rootScope.$broadcast("sessionChanged")},this.getUser=function(){return this.user},this.getGroups=function(){return this.groups},this.getActiveGroup=function(){return this.activeGroup},this.setDocs=function(docs){this.docs.independent=docs.independent,this.docs.group=docs.group,$rootScope.$broadcast("docsChanged")},this.getDocs=function(){return this.docs},this._setActiveGroup=function(groupId){var activeGroup=$filter("getById")(this.groups,groupId);this.activeGroup=activeGroup,$rootScope.$broadcast("activeGroupChanged")},this.setPreviousState=function(previous){this.previousState=previous},this.getPreviousState=function(){return this.previousState},this}),window.jQuery=window.$;var user,imports=["ngAnimate","ngSanitize","ngResource","pascalprecht.translate","madisonApp.constants","madisonApp.filters","madisonApp.services","madisonApp.resources","madisonApp.directives","madisonApp.controllers","madisonApp.prompts","madisonApp.translate","angulartics","angulartics.google.analytics","ui","ui.router","ui.bootstrap","ui.bootstrap.datetimepicker","angular-growl","ipCookie","angularFileUpload","yaru22.angular-timeago"];try{var app=angular.module("madisonApp",imports)}catch(err){console.log("Caught Error: "+err)}history.pushState||window.location.hash&&("/"!==window.location.pathname?window.location.replace("/#"+window.location.hash.substr(1)):window.location.replace("/#"+window.location.pathname));try{app.config(["growlProvider","$httpProvider",function(growlProvider,$httpProvider){growlProvider.messagesKey("messages"),growlProvider.messageTextKey("text"),growlProvider.messageSeverityKey("severity"),growlProvider.onlyUniqueMessages(!0),growlProvider.globalTimeToLive({error:-1,info:3e3,warning:3e3,success:3e3}),$httpProvider.interceptors.push(growlProvider.serverMessagesInterceptor)}])}catch(err){console.error(err)}app.config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0)}]),app.run(function(AuthService,annotationService,AUTH_EVENTS,$rootScope,$window,$location,$state,growl,SessionService){AuthService.setUser(user),$rootScope.$on("$stateChangeStart",function(event,next){var authorizedRoles=next.data.authorizedRoles;AuthService.isAuthorized(authorizedRoles)||(event.preventDefault(),AuthService.isAuthenticated()?$rootScope.$broadcast(AUTH_EVENTS.notAuthorized):$rootScope.$broadcast(AUTH_EVENTS.notAuthenticated))}),$rootScope.$on(AUTH_EVENTS.notAuthorized,function(){growl.error("You are not authorized to view that page")}),$rootScope.$on(AUTH_EVENTS.notAuthenticated,function(){growl.error("You must be logged in to view that page"),"/login"!==$location.path()&&($rootScope.returnTo=$location.path()),$state.go("login")}),$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){"doc-page"===toState.name&&annotationService.destroyAnnotator()})}),angular.element(document).ready(function(){function installGA(gaAccount){if(gaAccount){var embed=document.createElement("script");embed.text="(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create', '"+gaAccount+"', 'auto');//ga('send', 'pageview');";var scripts=document.getElementsByTagName("script")[0];scripts.parentNode.insertBefore(embed,scripts)}else console.info("Couldn't install Google Analytics: %s",gaAccount)}function installUservoice(uservoiceHash){if(!uservoiceHash)return void console.info("Unable to load UserVoice.  Settings: %s",uservoiceHash);window.UserVoice=[];var uv=document.createElement("script");uv.type="text/javascript",uv.async=!0,uv.src="//widget.uservoice.com/"+uservoiceHash+".js";var s=document.getElementsByTagName("script")[0];s.parentNode.insertBefore(uv,s),window.UserVoice.push(["set",{accent_color:"#448dd6",trigger_color:"white",trigger_background_color:"rgba(46, 49, 51, 0.6)"}]),window.UserVoice.push(["identify",{}]),window.UserVoice.push(["addTrigger",{mode:"contact",trigger_position:"bottom-right"}]),window.UserVoice.push(["autoprompt",{}])}var initInjector=angular.injector(["ng"]),$http=initInjector.get("$http");user={},$http.get("/api/user/current").success(function(res){var key;if(!$.isEmptyObject(res)&&Object.getOwnPropertyNames(res.user).length>0)for(key in res.user)res.user.hasOwnProperty(key)&&(user[key]=res.user[key]);else user=null;$http.get("/api/settings/vendors").then(function(res){vendors=res.data,installGA(vendors.ga),installUservoice(vendors.uservoice),angular.bootstrap(document,["madisonApp"])})})}),window.console=window.console||{},window.console.log=window.console.log||function(){},angular.module("madisonApp").config(["$stateProvider","$urlRouterProvider","USER_ROLES",function($stateProvider,$urlRouterProvider,USER_ROLES){$urlRouterProvider.otherwise("404"),$stateProvider.state("index",{url:"/",controller:"HomePageController",templateUrl:"/templates/pages/home.html",data:{authorizedRoles:[USER_ROLES.all]}}).state("intro",{url:"/intro",controller:"IntroPageController",templateUrl:"/templates/pages/intro.html",data:{authorizedRoles:[USER_ROLES.all]}}).state("doc-page",{url:"/docs/:slug",controller:"DocumentPageController",templateUrl:"/templates/pages/doc.html",data:{authorizedRoles:[USER_ROLES.all]}}).state("my-documents",{url:"/documents",controller:"MyDocumentsController",templateUrl:"/templates/pages/my-documents.html",data:{authorizedRoles:[USER_ROLES.all]}}).state("edit-doc",{url:"/dashboard/docs/:id",controller:"DashboardEditorController",templateUrl:"/templates/pages/edit-doc.html",data:{authorizedRoles:[USER_ROLES.admin,USER_ROLES.independent,USER_ROLES.groupMember]}}).state("login",{url:"/user/login",controller:"LoginPageController",templateUrl:"/templates/pages/login.html",data:{authorizedRoles:[USER_ROLES.all]}}).state("facebook-login",{url:"/user/login/facebook-login",controller:"OauthLoginController",data:{authorizedRoles:[USER_ROLES.all]}}).state("twitter-login",{url:"/user/login/twitter-login",controller:"OauthLoginController",data:{authorizedRoles:[USER_ROLES.all]}}).state("linkedin-login",{url:"/user/login/linkedin-login",controller:"OauthLoginController",data:{authorizedRoles:[USER_ROLES.all]}}).state("signup",{url:"/user/signup",controller:"SignupPageController",templateUrl:"/templates/pages/signup.html",data:{authorizedRoles:[USER_ROLES.all]}}).state("password-reset-request",{url:"/password/reset",controller:"PasswordResetController",templateUrl:"/templates/pages/password-reset-request.html",data:{authorizedRoles:[USER_ROLES.all]}}).state("password-reset-landing",{url:"/password/reset/:token",controller:"PasswordResetLandingController",templateUrl:"/templates/pages/password-reset-landing.html",data:{authorizedRoles:[USER_ROLES.all]}}).state("resend-confirmation",{url:"/verification/resend",controller:"ResendConfirmationController",templateUrl:"/templates/pages/resend-confirmation.html",data:{authorizedRoles:[USER_ROLES.all]}}).state("resend-confirmation-landing",{url:"/user/verify/:token",controller:"ResendConfirmationController",data:{authorizedRoles:[USER_ROLES.all]}}).state("user-notification-settings",{url:"/user/edit/:user/notifications",controller:"UserNotificationsController",templateUrl:"/templates/pages/user-notification-settings.html",data:{authorizedRoles:[USER_ROLES.admin,USER_ROLES.independent,USER_ROLES.groupMember,USER_ROLES.basic]}}).state("group-management",{url:"/groups",controller:"GroupManagementController",templateUrl:"/templates/pages/group-management.html",data:{authorizedRoles:[USER_ROLES.all]}}).state("create-group",{url:"/groups/edit",controller:"GroupEditController",templateUrl:"/templates/pages/group-edit.html",data:{authorizedRoles:[USER_ROLES.admin,USER_ROLES.independent,USER_ROLES.groupMember,USER_ROLES.basic]}}).state("edit-group",{url:"/groups/edit/:groupId",controller:"GroupEditController",templateUrl:"/templates/pages/group-edit.html",data:{authorizedRoles:[USER_ROLES.admin,USER_ROLES.groupMember]}}).state("manage-group-members",{url:"/groups/:id/members",controller:"GroupMembersController",templateUrl:"/templates/pages/group-members.html",data:{authorizedRoles:[USER_ROLES.admin,USER_ROLES.groupMember]}}).state("invite-group-members",{url:"/groups/:id/invite",controller:"GroupMembersController",templateUrl:"/templates/pages/group-members-invite.html",data:{authorizedRoles:[USER_ROLES.admin,USER_ROLES.groupMember]}}).state("administrative-dashboard",{url:"/administrative-dashboard",templateUrl:"/templates/pages/administrative-dashboard.html",data:{authorizedRoles:[USER_ROLES.admin]}}).state("dashboard-docs-list",{url:"/administrative-dashboard/docs",templateUrl:"/templates/pages/dashboard-docs-list.html",controller:"DashboardDocumentsController",data:{authorizedRoles:[USER_ROLES.admin]}}).state("verify-account",{url:"/administrative-dashboard/verify-account",templateUrl:"/templates/pages/verify-account.html",controller:"DashboardVerifyController",data:{authorizedRoles:[USER_ROLES.admin]}}).state("verify-group",{url:"/administrative-dashboard/verify-group",templateUrl:"/templates/pages/verify-group.html",controller:"DashboardVerifyGroupController",data:{authorizedRoles:[USER_ROLES.admin]}}).state("verify-independent",{url:"/administrative-dashboard/verify-independent",templateUrl:"/templates/pages/verify-independent.html",controller:"DashboardVerifyUserController",data:{authorizedRoles:[USER_ROLES.admin]}}).state("admin-notifications",{url:"/administrative-dashboard/notification-settings",templateUrl:"/templates/pages/admin-notifications.html",controller:"DashboardNotificationsController",data:{authorizedRoles:[USER_ROLES.admin]}}).state("site-settings",{url:"/administrative-dashboard/site-settings",templateUrl:"/templates/pages/site-settings.html",controller:"SiteSettingsController",data:{authorizedRoles:[USER_ROLES.admin]}}).state("user-edit",{url:"/user/edit/:id",templateUrl:"/templates/pages/user-edit.html",controller:"UserEditPageController",data:{authorizedRoles:[USER_ROLES.admin,USER_ROLES.independent,USER_ROLES.groupMember,USER_ROLES.basic]}}).state("user-sponsor-request",{url:"/user/sponsor",templateUrl:"/templates/pages/user-sponsor-request.html",controller:"UserSponsorPageController",data:{authorizedRoles:[USER_ROLES.all]}}).state("user",{url:"/user/:id",templateUrl:"/templates/pages/user.html",controller:"UserPageController",data:{authorizedRoles:[USER_ROLES.all]}}).state("content",{url:"/{page:faq|about|privacy-policy|copyright|terms-and-conditions|404}",controller:"ContentController",templateUrl:"/templates/pages/content.html",data:{authorizedRoles:[USER_ROLES.all]}})}]);
//# sourceMappingURL=app.map